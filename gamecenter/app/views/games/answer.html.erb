<h1 class="text-center">魔女の部屋</h1>

<div class="flex2">
<div class="flex-items text-center">
  <span><%= image_tag 'game1.png', :size =>'100x100'%></span>
  <h4>魔女が現れた！</h4>
  <h4>0-5の間で、好きな数字を答えよう！</h4>

    <form id="form1" action="#">
      <input class="sengen" type="text" id="input_message" value="">
      <input class="sengen" type="button" onclick="game1()" value="宣言する">
    </form>
    <div id="complain"></div>
    <div id="answer"></div>
    </div>
</div>

<script>
  function game1() {
    var input_message = document.getElementById("input_message").value;
    // input_message = "あなたは「" + input_message + "」を宣言した。";
    // ここで終わるとinputメッセージが更新される
    input_message = document.getElementById("input_message").value;
    // こうやってもう一回宣言しなおさないと
    document.getElementById("complain").innerHTML = "「あなたは" + input_message + "を宣言した。」";
    // 理解した。HTMLの部分を変えて出力している

    var number = Math.floor(Math.random() * 6);
    var answer = parseInt(input_message, 10);
    var message;

    if (answer === number) {
      message = '「当てられてしまったわ・・・！」魔女を倒した。魔王の部屋の扉が開いた！';
      // 呼び出しだからifの中に入れる
      postData(`/games/answer`)
        .then(data => console.log())
        .catch(error => console.error());
      // リクエストの中身確認用
    } else if (answer < number) {
      message = '「残念でした！もっと大きいわ！';
      message += ' 今回の正解は' + number + "よ！」";
    } else if (answer > number) {
      message = '「残念でした！もっと小さいわ！';
      message += '今回の正解は' + number + "よ！」";
    } else {
      message = '0〜5の数字を入力してね。';
    }
    document.getElementById("answer").innerHTML = message;
  }



  // コピペした（理由調べる）
  function postData(url = ``, data = {}) {
    // 既定のオプションには * が付いています
    return fetch(url, {
        method: "POST", // *GET, POST, PUT, DELETE, etc.
        mode: "cors", // no-cors, cors, *same-origin
        cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
        credentials: "same-origin", // include, same-origin, *omit
        headers: {
          "X-CSRF-Token": getCsrfToken(),
          // トークン取得できるように
          "Content-Type": "application/json; charset=utf-8",
          // "Content-Type": "application/x-www-form-urlencoded",
        },
        redirect: "follow", // manual, *follow, error
        referrer: "no-referrer", // no-referrer, *client
        body: JSON.stringify(data), // 本文のデータ型は "Content-Type" ヘッダーと一致する必要があります
      })
      .then(response => response.json()); // レスポンスの JSON を解析
  }

  // 後で調べる HTMLのメタタグから取ってるらしい
  const getCsrfToken = () => {
    const metas = document.getElementsByTagName('meta');
    for (let meta of metas) {
      if (meta.getAttribute('name') === 'csrf-token') {
        return meta.getAttribute('content');
      }
    }
    return '';
  }
</script>

<%# ここから下は練習と予想 %>
<%# これを多分倒したのところに書く %>
<%# fetch([, init]).then(post) %>